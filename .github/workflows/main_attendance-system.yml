name: Build and deploy Node.js project to Azure Function App - attendance-system

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './backend'  # Path to your backend code
  NODE_VERSION: '20.x'  # Node.js version to use

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Grant read access to repository contents

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          npm install
          npm run build --if-present
          cd ..

      - name: List files in backend directory before zipping
        run: ls -al ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}  # List files in backend directory to confirm content

      - name: Zip backend for deployment
        run: |
          echo "Zipping backend code..."
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../release.zip ./*  # Create the zip file in the root directory
          cd ..
          ls -al release.zip  # Verify release.zip exists in the root directory

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app  # Artifact name must match
          path: ./release.zip  # Correct path is release.zip in the root directory

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the deploy job only runs after the build job

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app  # Artifact name must match the one in the build job
          path: ./  # Download to the current directory

      - name: List files after downloading artifact
        run: ls -al ./  # Verify artifact is downloaded here

      - name: Unzip artifact
        run: unzip ./release.zip -d ./  # Unzip the downloaded artifact to the current directory

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: 'attendance-system'  # Azure Function App name
          slot-name: 'Production'  # Azure deployment slot
          package: './backend'  # Deploy from the current directory
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6990CE976B0548079E103CFBF1F348B2 }}
